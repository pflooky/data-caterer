import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */
val scalaVersion: String by project
val scalaSpecificVersion: String by project
val sparkVersion: String by project


plugins {
    // Apply the scala Plugin to add support for Scala.
    scala

    // Apply the application plugin to add support for building a CLI application in Java.
    application

    id("com.github.johnrengelman.shadow") version "7.1.2"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation("org.scala-lang:scala-library:$scalaSpecificVersion")
    implementation("org.apache.spark:spark-sql_$scalaVersion:$sparkVersion")

    // connectors
    // jdbc
    implementation("org.postgresql:postgresql:42.5.1")
    implementation("mysql:mysql-connector-java:8.0.33")
    // cassandra
    implementation("com.datastax.spark:spark-cassandra-connector_$scalaVersion:3.3.0")

    // data generation helpers
    implementation("net.datafaker:datafaker:1.9.0")
    implementation("org.reflections:reflections:0.10.2")

    // misc
    implementation("joda-time:joda-time:2.12.5")
    implementation("com.google.guava:guava:31.0.1-jre")
    implementation("com.github.pureconfig:pureconfig_$scalaVersion:0.17.2")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2")
    implementation("com.fasterxml.jackson.module:jackson-module-scala_$scalaVersion:2.14.2")
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit4 test framework
            useJUnit("4.13.2")

            dependencies {
                // Use Scalatest for testing our library
                implementation("org.scalatest:scalatest_$scalaVersion:3.2.10")
                implementation("org.scalatestplus:junit-4-13_$scalaVersion:3.2.2.0")

                // Need scala-xml at test runtime
                runtimeOnly("org.scala-lang.modules:scala-xml_$scalaVersion:1.2.0")
            }
        }
    }
}

application {
    // Define the main class for the application.
    mainClass.set("com.github.pflooky.datagen.App")
}

//tasks.register<Copy>("unpackShadow") {
//    dependsOn("shadowJar")
//    from(zipTree("$buildDir/libs/${tasks.withType(ShadowJar::class.java).getByName("shadowJar").archiveFileName.get()}"))
//    into("$buildDir/unpacked-shadow")
//}
//
//tasks.build {
//    finalizedBy("unpackShadow")
//}
//tasks.getByName("build").finalizedBy(tasks.getByName("unpackShadow"))

